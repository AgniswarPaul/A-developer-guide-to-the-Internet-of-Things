[
    {
        "id": "196c35a1.639ada",
        "type": "tab",
        "label": "Flow 4"
    },
    {
        "id": "28ae01f6.44760e",
        "type": "http in",
        "z": "196c35a1.639ada",
        "name": "/time",
        "url": "/time",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "4a6279b3.70d388"
            ]
        ]
    },
    {
        "id": "95698120.475f2",
        "type": "http response",
        "z": "196c35a1.639ada",
        "name": "HTTP Response",
        "x": 1000.0000152587891,
        "y": 188.7500057220459,
        "wires": []
    },
    {
        "id": "a502fc69.196a7",
        "type": "function",
        "z": "196c35a1.639ada",
        "name": "Setting HTTP Headers",
        "func": "msg.headers = {\"content-type\" : \"application/json\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770.2500114440918,
        "y": 189.0000057220459,
        "wires": [
            [
                "95698120.475f2"
            ]
        ]
    },
    {
        "id": "4a6279b3.70d388",
        "type": "function",
        "z": "196c35a1.639ada",
        "name": "curr timestamp",
        "func": "var now = new Date();\n\nvar hours = now.getHours();\nvar minutes = now.getMinutes();\n\nif ( hours < 10 )\n{\n    hours = \"0\" + hours;\n}\n\nif ( minutes < 10 )\n{\n    minutes = \"0\" + minutes\n}\n\nmsg.payload = hours+\":\"+minutes;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 288,
        "y": 146,
        "wires": [
            [
                "a40b560d.ca4438",
                "837764fe.f86548"
            ]
        ]
    },
    {
        "id": "a40b560d.ca4438",
        "type": "template",
        "z": "196c35a1.639ada",
        "name": "JSON template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"time\" : \"{{payload}}\"}",
        "x": 508.50000762939453,
        "y": 145.75000476837158,
        "wires": [
            [
                "a502fc69.196a7"
            ]
        ]
    },
    {
        "id": "7480664e.24fb38",
        "type": "http in",
        "z": "196c35a1.639ada",
        "name": "/random",
        "url": "/random",
        "method": "get",
        "swaggerDoc": "",
        "x": 97,
        "y": 211,
        "wires": [
            [
                "bc333e5b.619d9"
            ]
        ]
    },
    {
        "id": "bc333e5b.619d9",
        "type": "random",
        "z": "196c35a1.639ada",
        "name": "",
        "low": "1",
        "high": "10",
        "inte": "true",
        "x": 253,
        "y": 257,
        "wires": [
            [
                "daf6c2df.ed2ef",
                "b5b4cfb8.560dd",
                "3dc78681.50b43a"
            ]
        ]
    },
    {
        "id": "daf6c2df.ed2ef",
        "type": "template",
        "z": "196c35a1.639ada",
        "name": "JSON template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"random\" : {{payload}} }",
        "x": 511.00000762939453,
        "y": 258.2500057220459,
        "wires": [
            [
                "a502fc69.196a7"
            ]
        ]
    },
    {
        "id": "b27bcaa8.c9ddf8",
        "type": "http in",
        "z": "196c35a1.639ada",
        "name": "/page",
        "url": "/page",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 97,
        "y": 515.2500076293945,
        "wires": [
            [
                "76dbb7c2.e7c628"
            ]
        ]
    },
    {
        "id": "b5b4cfb8.560dd",
        "type": "function",
        "z": "196c35a1.639ada",
        "name": "Caching random num",
        "func": "flow.set('lastRandomNum', msg.payload);",
        "outputs": "0",
        "noerr": 0,
        "x": 524.7500076293945,
        "y": 333.25000762939453,
        "wires": []
    },
    {
        "id": "837764fe.f86548",
        "type": "function",
        "z": "196c35a1.639ada",
        "name": "Caching timestamp",
        "func": "flow.set('lastServerTime', msg.payload);",
        "outputs": "0",
        "noerr": 0,
        "x": 518.1250076293945,
        "y": 74.00000381469727,
        "wires": []
    },
    {
        "id": "f2f54e4b.c50d4",
        "type": "template",
        "z": "196c35a1.639ada",
        "name": "Generate HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{#lastServerTime}}\nTime last server time request received at {{lastServerTime}}\n{{/lastServerTime}}\n\n{{^lastServerTime}}\nNo server time requests have been received\n{{/lastServerTime}}\n\n<br/>\n{{#lastRandomNum}}\nLast random number request returned {{lastRandomNum}}, which was received at {{lastRandomNumTimestamp}}\n{{/lastRandomNum}}\n\n{{^lastRandomNum}}\nNo requests for random numbers have been received\n{{/lastRandomNum}}",
        "x": 541.8750076293945,
        "y": 514.0000076293945,
        "wires": [
            [
                "95698120.475f2"
            ]
        ]
    },
    {
        "id": "76dbb7c2.e7c628",
        "type": "function",
        "z": "196c35a1.639ada",
        "name": "Get cached values",
        "func": "// Get cached timestamp and random num\n\nvar lastServerTime = flow.get('lastServerTime');\nvar lastRandomNum = flow.get('lastRandomNum');\nvar lastRandomNumTimestamp = flow.get('lastRandomNumTimestamp');\n\nmsg.lastServerTime = lastServerTime;\nmsg.lastRandomNum = lastRandomNum;\nmsg.lastRandomNumTimestamp = lastRandomNumTimestamp;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 303.12500762939453,
        "y": 515.2500076293945,
        "wires": [
            [
                "f2f54e4b.c50d4"
            ]
        ]
    },
    {
        "id": "3dc78681.50b43a",
        "type": "function",
        "z": "196c35a1.639ada",
        "name": "curr timestamp",
        "func": "var now = new Date();\n\nvar hours = now.getHours();\nvar minutes = now.getMinutes();\n\nif ( hours < 10 )\n{\n    hours = \"0\" + hours;\n}\n\nif ( minutes < 10 )\n{\n    minutes = \"0\" + minutes\n}\n\nmsg.payload = hours+\":\"+minutes;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 278.12500762939453,
        "y": 390.25000762939453,
        "wires": [
            [
                "bb071811.07c468"
            ]
        ]
    },
    {
        "id": "bb071811.07c468",
        "type": "function",
        "z": "196c35a1.639ada",
        "name": "Caching random num timestamp",
        "func": "flow.set('lastRandomNumTimestamp', msg.payload);\nreturn msg;",
        "outputs": "0",
        "noerr": 0,
        "x": 584.375,
        "y": 390.25,
        "wires": []
    }
]